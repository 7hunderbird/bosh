---
groups:
  - name: bosh
    jobs:
      - unit-2.3
      - unit-2.3-mysql
      - unit-2.3-postgres
      - unit-2.3-rds
      - blobstore-client-integration
      - integration-2.3-postgres
      # - load-tests-postgres
      # - load-tests-mysql
      # - legacy-load-tests-postgres
      # - legacy-load-tests-mysql
      # - fuzz-tests
      - candidate-release
      - bats-centos
      - bats-ubuntu
      - brats-ubuntu
      - upgrade-tests
      - blobstore-performance

  - name: mysql
    jobs:
      - unit-2.3-mysql
      - unit-2.3-rds

  - name: postgres
    jobs:
      - unit-2.3-postgres
      - unit-2.3-rds
      - integration-2.3-postgres

shared:
  - &deploy-director
    task: deploy-director
    tags: [vsphere-v6.5]
    file: bosh-src/ci/bats/tasks/deploy-director.yml
    params:
      BAT_INFRASTRUCTURE: vsphere
      BOSH_CLIENT:                          {{stemcell-test-director-username}}
      BOSH_CLIENT_SECRET:                   {{stemcell-test-director-password}}
      BOSH_VSPHERE_VCENTER:                 {{vcenter-ip}}
      BOSH_VSPHERE_VCENTER_USER:            {{vcenter-user}}
      BOSH_VSPHERE_VCENTER_PASSWORD:        {{vcenter-password}}
      BOSH_VSPHERE_VERSION:                 {{vsphere-version}}
      BOSH_VSPHERE_VCENTER_DC:              {{vcenter-dc}}
      BOSH_VSPHERE_VCENTER_CLUSTER:         {{vcenter-cluster}}
      BOSH_VSPHERE_VCENTER_DATASTORE:       {{vcenter-datastore}}
      BOSH_VSPHERE_VCENTER_VLAN:            {{vcenter-vlan}}
      BOSH_VSPHERE_VCENTER_VM_FOLDER:       {{vcenter-vm-folder}}
      BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: {{vcenter-template-folder}}
      BOSH_VSPHERE_VCENTER_DISK_PATH:       {{vcenter-disk-path}}
      BOSH_VSPHERE_VCENTER_RP:              {{vcenter-rp}}
      DEPLOY_ARGS: |
        -o bosh-deployment/experimental/postgres-9-4.yml \
        -o bosh-deployment/vsphere/resource-pool.yml

  - &prepare-bats-config
    task: prepare-bats
    tags: [vsphere-v6.5]
    file: bosh-src/ci/bats/iaas/vsphere/prepare-bats-config.yml

  - &run-bats
    task: run-bats
    tags: [vsphere-v6.5]
    file: bats/ci/tasks/run-bats.yml

  - &teardown
    task: teardown
    tags: [vsphere-v6.5]
    file: bosh-src/ci/bats/tasks/destroy-director.yml

jobs:
  - name: unit-2.3
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }

      - task: test
        file: bosh-src/ci/tasks/test-unit.yml
        params:
          RUBY_VERSION: 2.3.7
          DB: sqlite

  - name: unit-2.3-mysql
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }
      - aggregate:
        - task: test-mysql-5.5
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-mysql-5.5
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: mysql

        - task: test-mysql-5.6
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-mysql-5.6
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: mysql

        - task: test-mysql-5.7
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-mysql-5.7
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: mysql

  - name: unit-2.3-postgres
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }
      - aggregate:
        - task: test-postgres-9.3
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.3
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: postgresql
              DB_VERSION: 9.3

        - task: test-postgres-9.4
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.4
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: postgresql
              DB_VERSION: 9.4

        - task: test-postgres-9.5
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.5
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: postgresql
              DB_VERSION: 9.5

        - task: test-postgres-9.6
          privileged: true
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: bosh/main-postgres-9.6
            inputs:
              - name: bosh-src
            run:
              path: bosh-src/ci/tasks/test-unit.sh
            params:
              RUBY_VERSION: 2.3.7
              DB: postgresql
              DB_VERSION: 9.6

  - name: unit-2.3-rds
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - aggregate:
        - task: test-mysql-rds
          privileged: true
          file: bosh-src/ci/tasks/test-unit-remote-db.yml
          params:
            RUBY_VERSION: 2.3.7
            DB: mysql
            DB_HOST: {{mysql-rds-host}}
            DB_USER: {{mysql-rds-user}}
            DB_PASSWORD: {{mysql-rds-password}}
            AWS_ACCESS_KEY_ID: {{mysql-rds-aws-access-key-id}}
            AWS_SECRET_ACCESS_KEY: {{mysql-rds-aws-secret-access-key}}
            AWS_REGION: {{mysql-rds-aws-region}}
            RDS_MYSQL_DB_IDENTIFIER: {{mysql-rds-db-identifier}}
        - task: test-postgresql-rds
          privileged: true
          file: bosh-src/ci/tasks/test-unit-remote-db.yml
          params:
            RUBY_VERSION: 2.3.7
            DB: postgresql
            DB_HOST: {{postgresql-rds-host}}
            DB_USER: {{postgresql-rds-user}}
            DB_PASSWORD: {{postgresql-rds-password}}

  - name: blobstore-client-integration
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: every-sunday, trigger: true }
      - task: test-s3
        file: bosh-src/ci/tasks/test-s3-blobstore-client-integration.yml
        params:
          access_key_id: {{blobstore_client_aws_access_key_id}}
          secret_access_key: {{blobstore_client_aws_secret_access_key}}
          s3_region: {{blobstore_client_aws_s3_region}}
          s3_host: {{blobstore_client_aws_s3_host}}
          run_aws_tests: "Not null"
          RUBY_VERSION: 2.1.2
      - task: test-local
        file: bosh-src/ci/tasks/test-local-blobstore-client-integration.yml
        params:
          RUBY_VERSION: 2.1.2
      - task: test-dav
        file: bosh-src/ci/tasks/test-dav-blobstore-client-integration.yml
        params:
          RUBY_VERSION: 2.1.2
      - task: test-gcs
        file: bosh-src/ci/tasks/test-gcs-blobstore-client-integration.yml
        params:
          google_project: {{blobstore_client_google_project}}
          google_json_key_data: {{blobstore_client_google_json_key_data}}
          RUBY_VERSION: 2.1.2

  - name: blobstore-performance
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: davcli, trigger: true }
      - { get: every-sunday, trigger: true }
      - task: test
        privileged: true
        file: bosh-src/ci/tasks/test-blobstore-load.yml

  - name: integration-2.3-postgres
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - { get: bosh-src, trigger: true }
      - { get: bosh-agent, trigger: true }
      - { get: every-sunday, trigger: true }
      - get: bosh-main-postgres-9.4
      - aggregate:
        - task: test-group-1
          privileged: true
          file: bosh-src/ci/tasks/test-integration.yml
          image: bosh-main-postgres-9.4
          tags: ["bosh-integration-1"]
          params:
            DB:           postgresql
            RUBY_VERSION: 2.3.7
            NUM_GROUPS: 24
            GROUP:      1,4,7,10,13,16,19,22

        - task: test-group-2
          privileged: true
          file: bosh-src/ci/tasks/test-integration.yml
          image: bosh-main-postgres-9.4
          tags: ["bosh-integration-2"]
          params:
            DB:           postgresql
            RUBY_VERSION: 2.3.7
            NUM_GROUPS: 24
            GROUP:      2,5,8,11,14,17,20,23

        - task: test-group-3
          privileged: true
          file: bosh-src/ci/tasks/test-integration.yml
          image: bosh-main-postgres-9.4
          tags: ["bosh-integration-3"]
          params:
            DB:           postgresql
            RUBY_VERSION: 2.3.7
            NUM_GROUPS: 24
            GROUP:      3,6,9,12,15,18,21,24

  - name: upgrade-tests
    public: true
    serial: true
    build_logs_to_retain: 250
    plan:
      - aggregate:
        - get: bosh-src
          trigger: true
        - get: bosh-cli
        - get: bosh-agent
        - { get: every-sunday, trigger: true }
        - get: bosh-main-postgres-9.4
      - aggregate:
        - task: upgrade-with-postgres
          privileged: true
          file: bosh-src/ci/tasks/test-upgrade.yml
          image: bosh-main-postgres-9.4
          tags: ["bosh-integration-4"]
          params:
            DB: postgresql
            RUBY_VERSION: 2.3.7

        - task: upgrade-with-mysql
          privileged: true
          file: bosh-src/ci/tasks/test-upgrade.yml
          tags: ["bosh-integration-5"]
          params:
            DB: mysql
            RUBY_VERSION: 2.3.7

  # - name: load-tests-postgres
  #   public: true
  #   serial: true
  #   serial_groups: ["load_tests"] # heavy footprint! run one at a time.
  #   build_logs_to_retain: 250
  #   plan:
  #   - { get: bosh-load-tests-workspace }
  #   - { get: warden-ubuntu-trusty }
  #   - { get: bosh-candidate-release-tarballs }
  #   - { get: bosh-cli }
  #
  #   - task: test
  #     privileged: true
  #     file: bosh-load-tests-workspace/ci/tasks/test.yml
  #     tags: ["bosh-load-tests"]
  #     input_mapping:
  #       bosh-candidate-stemcell: warden-ubuntu-trusty
  #       bosh-candidate-release: bosh-candidate-release-tarballs
  #     params:
  #       DB: postgresql
  #       LEGACY: false
  #
  # - name: legacy-load-tests-postgres
  #   public: true
  #   serial: true
  #   serial_groups: ["load_tests"] # heavy footprint! run one at a time.
  #   build_logs_to_retain: 250
  #   plan:
  #   - { get: bosh-load-tests-workspace }
  #   - { get: bosh-cli }
  #   - { get: bosh-candidate-release-tarballs }
  #   - { get: warden-ubuntu-trusty }
  #
  #   - task: test
  #     privileged: true
  #     file: bosh-load-tests-workspace/ci/tasks/test.yml
  #     tags: ["bosh-load-tests"]
  #     input_mapping:
  #       bosh-candidate-stemcell: warden-ubuntu-trusty
  #       bosh-candidate-release: bosh-candidate-release-tarballs
  #     params:
  #       DB: postgresql
  #       LEGACY: true
  #
  # - name: load-tests-mysql
  #   public: true
  #   serial: true
  #   serial_groups: ["load_tests"] # heavy footprint! run one at a time.
  #   build_logs_to_retain: 250
  #   plan:
  #   - { get: bosh-load-tests-workspace }
  #   - { get: bosh-cli }
  #   - { get: bosh-candidate-release-tarballs }
  #   - { get: warden-ubuntu-trusty }
  #
  #   - task: test
  #     privileged: true
  #     file: bosh-load-tests-workspace/ci/tasks/test.yml
  #     tags: ["bosh-load-tests"]
  #     input_mapping:
  #       bosh-candidate-stemcell: warden-ubuntu-trusty
  #       bosh-candidate-release: bosh-candidate-release-tarballs
  #     params:
  #       DB: mysql
  #       LEGACY: false
  #
  # - name: legacy-load-tests-mysql
  #   public: true
  #   serial: true
  #   serial_groups: ["load_tests"] # heavy footprint! run one at a time.
  #   build_logs_to_retain: 250
  #   plan:
  #   - { get: fuzz-interval-trigger, trigger: true }
  #   - { get: bosh-load-tests-workspace }
  #   - { get: bosh-cli }
  #   - { get: bosh-candidate-release-tarballs }
  #   - { get: warden-ubuntu-trusty }
  #
  #   - task: test
  #     privileged: true
  #     file: bosh-load-tests-workspace/ci/tasks/test.yml
  #     tags: ["bosh-load-tests"]
  #     input_mapping:
  #       bosh-candidate-stemcell: warden-ubuntu-trusty
  #       bosh-candidate-release: bosh-candidate-release-tarballs
  #     params:
  #       DB: mysql
  #       LEGACY: true
  #
  # - name: fuzz-tests
  #   public: true
  #   serial: true
  #   build_logs_to_retain: 2500
  #   plan:
  #   - { get: fuzz-interval-trigger, trigger: true }
  #   - { get: bosh-src, trigger: true }
  #   - { get: bosh-agent }
  #   - { get: bosh-fuzz-tests }
  #   - { get: bosh-cli }

  #   - task: test
  #     privileged: true
  #     file: bosh-fuzz-tests/ci/tasks/test.yml
  #     tags: ["bosh-integration"]
  #     params:
  #       BOSH_SRC_PATH: bosh-src/src
  #       RUBY_VERSION: 2.3.7

  - name: candidate-release
    plan:
    - get: bosh-src
      trigger: true
      passed:
      - unit-2.3
      - unit-2.3-mysql
      - unit-2.3-postgres
      - integration-2.3-postgres
      - blobstore-client-integration
      - upgrade-tests
      - blobstore-performance
    - get: bosh-cli
    - get: candidate-version
      params:
        bump: minor
    - task: make
      file: bosh-src/ci/tasks/make-candidate.yml
    - put: bosh-candidate-release-tarballs
      params:
        file: "release/bosh-dev-release.tgz"

  - name: bats-centos
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-release
          resource: bosh-candidate-release-tarballs
          trigger: true
          passed:
          - candidate-release
        - get: cpi-release
        - get: stemcell
          resource: vsphere-esxi-centos-7
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: bosh-src
          passed:
          - candidate-release

      - put: environment
        params:
          acquire: true

      - do:
        - <<: *deploy-director

        - <<: *prepare-bats-config
          params:
            STEMCELL_NAME: bosh-vsphere-esxi-centos-7-go_agent

        - <<: *run-bats
        ensure:
          do:
            - <<: *teardown
      ensure:
        do:
        - {put: environment, params: {release: environment}}

  - name: bats-ubuntu
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-release
          resource: bosh-candidate-release-tarballs
          trigger: true
          passed:
            - candidate-release
        - get: cpi-release
        - get: stemcell
          resource: vsphere-esxi-ubuntu-trusty
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: bosh-src
          passed:
            - candidate-release

      - put: environment
        params:
          acquire: true

      - do:
        - <<: *deploy-director

        - <<: *prepare-bats-config
          params:
            STEMCELL_NAME: bosh-vsphere-esxi-ubuntu-trusty-go_agent

        - <<: *run-bats
        ensure:
          do:
            - <<: *teardown
      ensure:
        do:
        - {put: environment, params: {release: environment}}

  - name: brats-ubuntu
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-src
          passed:
          - candidate-release
        - get: dns-release
        - get: candidate-warden-ubuntu-stemcell
        - get: bosh-release
          resource: bosh-candidate-release-tarballs
          trigger: true
          passed:
            - candidate-release
        - { get: every-sunday, trigger: true }
      - task: test-brats
        file: bosh-src/ci/tasks/test-brats.yml
        tags: ["worker-brats"]
        privileged: true
        input_mapping:
          bosh-dev-release: bosh-release

resources:
  - name: bosh-src
    type: git
    source:
      uri: {{bosh_src_url}}
      branch: 263.x
      private_key: {{github_deployment_key}}

  - name: candidate-version
    type: semver
    source:
      bucket: {{candidate_release_bucket}}
      key: 263.x/version
      initial_version: 263.0.0
      access_key_id: {{candidate_release_access_key_id}}
      secret_access_key: {{candidate_release_secret_access_key}}

  - name: bosh-candidate-release-tarballs
    type: s3
    source:
      bucket: {{candidate_release_bucket}}
      access_key_id: {{candidate_release_access_key_id}}
      secret_access_key: {{candidate_release_secret_access_key}}
      versioned_file: "263.x/bosh-dev-release.tgz"

  - name: davcli
    type: s3
    source:
      regexp: davcli-(.*)-linux-amd64
      bucket: davcli
      region_name: us-east-1

  # - name: bosh-fuzz-tests
  #   type: git
  #   source:
  #     uri: https://github.com/cloudfoundry-incubator/bosh-fuzz-tests.git
  #     branch: master

  # - name: bosh-load-tests-workspace
  #   type: git
  #   source:
  #     uri: https://github.com/cloudfoundry-incubator/bosh-load-tests-workspace
  #     branch: master
  #
  # - name: fuzz-interval-trigger
  #   type: time
  #   source:
  #     interval: 15m

  - name: every-sunday
    type: time
    source:
      start: 9:00 AM
      stop: 10:00 AM
      days: [Sunday]

  - name: bosh-cli
    type: s3
    source:
      regexp: alpha-bosh-cli-(.*)-linux-amd64
      bucket: {{bosh_cli_aws_s3_alpha_release_bucket}}
      region_name: {{bosh_cli_aws_s3_release_bucket_region}}

  - name: dns-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/dns-release
      branch: master

  #
  # BATS
  #

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

  - name: environment
    type: pool
    source:
      pool: vsphere
      uri: git@github.com:pivotal-cf-experimental/bats-concourse-pool.git
      branch: master
      private_key: {{github_deployment_key__bosh-cpi-environments}}

  - name: vsphere-esxi-ubuntu-trusty
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-ubuntu-trusty-go_agent

  - name: candidate-warden-ubuntu-stemcell
    type: s3
    source:
      bucket: bosh-core-stemcells-candidate
      regexp: warden/bosh-stemcell-(.+)-warden-boshlite-ubuntu-trusty-go_agent.tgz

  # - name: warden-ubuntu-trusty
  #   type: bosh-io-stemcell
  #   source:
  #     name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  #
  - name: vsphere-esxi-centos-7
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-centos-7-go_agent

  - name: cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-vsphere-cpi-release

  - name: bosh-agent
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-agent
      branch: master

  - name: bosh-main-postgres-9.4
    type: docker-image
    source:
      repository: bosh/main-postgres-9.4
