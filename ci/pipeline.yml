groups:
- jobs:
  - unit-2.4
  - unit-2.4-mysql
  - unit-2.4-postgres
  - integration-db-tls-postgres
  - integration-db-tls-postgres-hotswap
  - integration-db-tls-mysql
  - fuzz-tests
  - candidate-release
  - bats-centos
  - bats-ubuntu-trusty
  - bats-ubuntu-xenial
  - bats-ubuntu-trusty-aws
  - brats-ubuntu-trusty
  - brats-ubuntu-xenial
  - bbr-ubuntu-trusty
  - bbr-ubuntu-xenial
  - upgrade-tests
  - blobstore-performance
  - delivery
  - finalize-bosh-release
  - export-final-release
  name: bosh
- jobs:
  - unit-2.4-mysql
  name: mysql
- jobs:
  - unit-2.4-postgres
  - integration-db-tls-postgres-hotswap
  name: postgres
- jobs:
  - bats-centos
  - bats-ubuntu-trusty
  - bats-ubuntu-xenial
  - bats-ubuntu-trusty-aws
  name: bats
- jobs:
  - compile-bbr-trusty
  - compile-bbr-xenial
  - brats-ubuntu-trusty
  - brats-ubuntu-xenial
  - bbr-ubuntu-trusty
  - bbr-ubuntu-xenial
  name: brats/bbr
- jobs:
  - finalize-bosh-release
  - export-final-release
  name: finalize
jobs:
- build_logs_to_retain: 250
  name: unit-2.4
  plan:
  - get: bosh-src
    trigger: true
  - file: bosh-src/ci/tasks/test-unit.yml
    params:
      DB: sqlite
    task: test
    timeout: 2h
  public: true
  serial: true
- build_logs_to_retain: 250
  name: unit-2.4-mysql
  plan:
  - aggregate:
    - get: bosh-src
      trigger: true
    - get: bosh-main-mysql-5.5
    - get: bosh-main-mysql-5.6
    - get: bosh-main-mysql-5.7
  - aggregate:
    - file: bosh-src/ci/tasks/test-unit.yml
      image: bosh-main-mysql-5.5
      params:
        DB: mysql
      privileged: true
      task: test-mysql-5.5
      timeout: 2h
    - file: bosh-src/ci/tasks/test-unit.yml
      image: bosh-main-mysql-5.6
      params:
        DB: mysql
      privileged: true
      task: test-mysql-5.6
      timeout: 2h
    - file: bosh-src/ci/tasks/test-unit.yml
      image: bosh-main-mysql-5.7
      params:
        DB: mysql
      privileged: true
      task: test-mysql-5.7
      timeout: 2h
  public: true
  serial: true
- build_logs_to_retain: 250
  name: unit-2.4-postgres
  plan:
  - aggregate:
    - get: bosh-src
      trigger: true
    - get: bosh-main-postgres-9.4
    - get: bosh-main-postgres-9.6
  - aggregate:
    - file: bosh-src/ci/tasks/test-unit.yml
      image: bosh-main-postgres-9.4
      params:
        DB: postgresql
        DB_VERSION: 9.4
      privileged: true
      task: test-postgres-9.4
      timeout: 2h
    - file: bosh-src/ci/tasks/test-unit.yml
      image: bosh-main-postgres-9.6
      params:
        DB: postgresql
        DB_VERSION: 9.6
      privileged: true
      task: test-postgres-9.6
      timeout: 2h
  public: true
  serial: true
- build_logs_to_retain: 250
  name: blobstore-performance
  plan:
  - get: bosh-src
    trigger: true
  - get: davcli
    trigger: true
  - file: bosh-src/ci/tasks/test-blobstore-load.yml
    privileged: true
    task: test
  public: true
  serial: true
- build_logs_to_retain: 250
  name: integration-db-tls-postgres
  plan:
  - aggregate:
    - get: bosh-src
      trigger: true
    - get: bosh-cli
      trigger: true
    - get: bosh-agent
    - get: integration-tests-parallel-runtime
    - get: bosh-main-postgres-9.4
  - config:
      image_resource:
        source:
          repository: bosh/main
        type: docker-image
      inputs:
      - name: bosh-src
        path: uninstalled-bosh-src
      - name: bosh-cli
      - name: bosh-agent
      outputs:
      - name: bosh-src
      params:
        RUBY_VERSION: 2.4.4
      platform: linux
      run:
        args:
        - -cex
        - |
          mv ./bosh-cli/*bosh-cli-*-linux-amd64 /usr/local/bin/bosh
          chmod +x /usr/local/bin/bosh
          source uninstalled-bosh-src/ci/tasks/utils.sh
          agent_path=uninstalled-bosh-src/src/go/src/github.com/cloudfoundry/
          mkdir -p $agent_path
          cp -r bosh-agent $agent_path
          pushd uninstalled-bosh-src/src
            source /etc/profile.d/chruby.sh
            chruby $RUBY_VERSION

            bundle install --local
            bundle exec rake spec:integration:install_dependencies
          popd
          rsync -a uninstalled-bosh-src/ bosh-src/
        path: /bin/bash
    task: install-dependencies
  - file: bosh-src/ci/tasks/test-integration-gocli.yml
    image: bosh-main-postgres-9.4
    params:
      DB: postgresql
      DB_TLS: true
      SHA2_MODE: true
    privileged: true
    tags:
    - bosh-integration-1
    task: tests
  - params:
      acl: public-read
      file: parallel-runtime-log/parallel_runtime_rspec.log
    put: integration-tests-parallel-runtime
  public: true
  serial: true
- build_logs_to_retain: 250
  name: integration-db-tls-postgres-hotswap
  plan:
  - aggregate:
    - get: bosh-src
      trigger: true
    - get: bosh-cli
      trigger: true
    - get: bosh-agent
    - get: integration-tests-parallel-runtime
    - get: bosh-main-postgres-9.4
  - config:
      image_resource:
        source:
          repository: bosh/main
        type: docker-image
      inputs:
      - name: bosh-src
        path: uninstalled-bosh-src
      - name: bosh-cli
      - name: bosh-agent
      outputs:
      - name: bosh-src
      params:
        RUBY_VERSION: 2.4.4
      platform: linux
      run:
        args:
        - -cex
        - |
          mv ./bosh-cli/*bosh-cli-*-linux-amd64 /usr/local/bin/bosh
          chmod +x /usr/local/bin/bosh
          source uninstalled-bosh-src/ci/tasks/utils.sh
          agent_path=uninstalled-bosh-src/src/go/src/github.com/cloudfoundry/
          mkdir -p $agent_path
          cp -r bosh-agent $agent_path
          pushd uninstalled-bosh-src/src
            source /etc/profile.d/chruby.sh
            chruby $RUBY_VERSION

            bundle install --local
            bundle exec rake spec:integration:install_dependencies
          popd
          rsync -a uninstalled-bosh-src/ bosh-src/
        path: /bin/bash
    task: install-dependencies
  - file: bosh-src/ci/tasks/test-integration-gocli.yml
    image: bosh-main-postgres-9.4
    params:
      DB: postgresql
      DB_TLS: true
      DEFAULT_UPDATE_VM_STRATEGY: create-swap-delete
      SHA2_MODE: true
    privileged: true
    tags:
    - bosh-integration-2
    task: tests
  - params:
      acl: public-read
      file: parallel-runtime-log/parallel_runtime_rspec.log
    put: integration-tests-parallel-runtime
  public: true
  serial: true
- build_logs_to_retain: 250
  name: integration-db-tls-mysql
  plan:
  - aggregate:
    - get: bosh-src
      trigger: true
    - get: bosh-cli
      trigger: true
    - get: bosh-agent
    - get: bosh-main-mysql-5.7
    - get: integration-tests-parallel-runtime
  - config:
      image_resource:
        source:
          repository: bosh/main
        type: docker-image
      inputs:
      - name: bosh-src
        path: uninstalled-bosh-src
      - name: bosh-cli
      - name: bosh-agent
      outputs:
      - name: bosh-src
      params:
        RUBY_VERSION: 2.4.4
      platform: linux
      run:
        args:
        - -cex
        - |
          mv ./bosh-cli/*bosh-cli-*-linux-amd64 /usr/local/bin/bosh
          chmod +x /usr/local/bin/bosh
          source uninstalled-bosh-src/ci/tasks/utils.sh
          agent_path=uninstalled-bosh-src/src/go/src/github.com/cloudfoundry/
          mkdir -p $agent_path
          cp -r bosh-agent $agent_path
          pushd uninstalled-bosh-src/src
            source /etc/profile.d/chruby.sh
            chruby $RUBY_VERSION

            bundle install --local
            bundle exec rake spec:integration:install_dependencies
          popd
          rsync -a uninstalled-bosh-src/ bosh-src/
        path: /bin/bash
    task: install-dependencies
  - config:
      image_resource:
        source:
          repository: bosh/main-mysql-5.7
        type: docker-image
      inputs:
      - name: bosh-src
      - name: bosh-cli
      - name: bosh-agent
      outputs:
      - name: parallel-runtime-log
      params:
        DB: mysql
        DB_TLS: true
        RUBY_VERSION: 2.4.4
        SHA2_MODE: true
      platform: linux
      run:
        path: bosh-src/ci/tasks/test-integration-gocli.sh
    privileged: true
    tags:
    - bosh-integration-3
    task: tests
  - params:
      acl: public-read
      file: parallel-runtime-log/parallel_runtime_rspec.log
    put: integration-tests-parallel-runtime
  public: true
  serial: true
- build_logs_to_retain: 250
  name: upgrade-tests
  plan:
  - aggregate:
    - get: bosh-src
      trigger: true
    - get: bosh-cli
      trigger: true
    - get: bosh-agent
    - get: bosh-main-postgres-9.4
  - aggregate:
    - file: bosh-src/ci/tasks/test-upgrade.yml
      image: bosh-main-postgres-9.4
      params:
        DB: postgresql
      privileged: true
      tags:
      - bosh-integration-4
      task: upgrade-with-postgres
    - file: bosh-src/ci/tasks/test-upgrade.yml
      params:
        DB: mysql
      privileged: true
      tags:
      - bosh-integration-5
      task: upgrade-with-mysql
  public: true
  serial: true
- build_logs_to_retain: 2500
  name: fuzz-tests
  plan:
  - get: fuzz-interval-trigger
    trigger: true
  - get: bosh-src
    trigger: true
  - get: bosh-agent
  - get: bosh-fuzz-tests
  - get: bosh-cli
  - file: bosh-fuzz-tests/ci/tasks/test.yml
    params:
      BOSH_SRC_PATH: bosh-src/src
      RUBY_VERSION: 2.4.4
    privileged: true
    tags:
    - bosh-integration-6
    task: test
  public: true
  serial: true
- name: compile-bbr-xenial
  plan:
  - aggregate:
    - get: bosh-src
    - get: release
      resource: bbr-sdk-release
      trigger: true
    - get: stemcell
      resource: warden-ubuntu-xenial
      trigger: true
  - file: bosh-src/ci/tasks/export-release.yml
    privileged: true
    task: export-release
  - params:
      file: compiled-release/*.tgz
    put: bbr-compiled-xenial
- name: compile-bbr-trusty
  plan:
  - aggregate:
    - get: bosh-src
    - get: release
      resource: bbr-sdk-release
      trigger: true
    - get: stemcell
      resource: warden-ubuntu-trusty
      trigger: true
  - file: bosh-src/ci/tasks/export-release.yml
    privileged: true
    task: export-release
  - params:
      file: compiled-release/*.tgz
    put: bbr-compiled-trusty
- name: candidate-release
  plan:
  - get: bosh-src
    passed:
    - unit-2.4
    - unit-2.4-mysql
    - unit-2.4-postgres
    - fuzz-tests
    - upgrade-tests
    - blobstore-performance
    - integration-db-tls-mysql
    - integration-db-tls-postgres
    - integration-db-tls-postgres-hotswap
    trigger: true
  - get: bosh-cli
  - get: candidate-version
    params:
      bump: minor
  - file: bosh-src/ci/tasks/make-candidate.yml
    task: make
  - params:
      file: release/bosh-dev-release.tgz
    put: bosh-candidate-release-tarballs
- name: bats-centos
  plan:
  - do:
    - aggregate:
      - get: bosh-release
        passed:
        - candidate-release
        resource: bosh-candidate-release-tarballs
        trigger: true
      - get: cpi-release
      - get: stemcell
        resource: vsphere-esxi-centos-7
      - get: bosh-cli
      - get: bats
      - get: bosh-deployment
      - get: bosh-src
        passed:
        - candidate-release
    - params:
        acquire: true
      put: environment
    - do:
      - file: bosh-src/ci/bats/tasks/deploy-director.yml
        params:
          BAT_INFRASTRUCTURE: vsphere
          BOSH_CLIENT: ((stemcell-test-director-username))
          BOSH_CLIENT_SECRET: ((stemcell-test-director-password))
          BOSH_VSPHERE_VCENTER: ((vcenter-ip))
          BOSH_VSPHERE_VCENTER_CLUSTER: ((vcenter-cluster))
          BOSH_VSPHERE_VCENTER_DATASTORE: ((vcenter-datastore))
          BOSH_VSPHERE_VCENTER_DC: ((vcenter-dc))
          BOSH_VSPHERE_VCENTER_DISK_PATH: ((vcenter-disk-path))
          BOSH_VSPHERE_VCENTER_PASSWORD: ((vcenter-password))
          BOSH_VSPHERE_VCENTER_RP: ((vcenter-rp))
          BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: ((vcenter-template-folder))
          BOSH_VSPHERE_VCENTER_USER: ((vcenter-user))
          BOSH_VSPHERE_VCENTER_VLAN: ((vcenter-vlan))
          BOSH_VSPHERE_VCENTER_VM_FOLDER: ((vcenter-vm-folder))
          BOSH_VSPHERE_VERSION: ((vsphere-version))
          DEPLOY_ARGS: |
            -o bosh-deployment/experimental/postgres-9-4.yml
            -o bosh-deployment/vsphere/resource-pool.yml
        tags:
        - vsphere-v6.5
        task: deploy-director
      - file: bosh-src/ci/bats/iaas/vsphere/prepare-bats-config.yml
        params:
          STEMCELL_NAME: bosh-vsphere-esxi-centos-7-go_agent
        tags:
        - vsphere-v6.5
        task: prepare-bats
      - file: bats/ci/tasks/run-bats.yml
        tags:
        - vsphere-v6.5
        task: run-bats
      ensure:
        do:
        - file: bosh-src/ci/bats/tasks/destroy-director.yml
          tags:
          - vsphere-v6.5
          task: teardown
    ensure:
      do:
      - params:
          release: environment
        put: environment
  serial: true
- name: bats-ubuntu-trusty
  plan:
  - do:
    - aggregate:
      - get: bosh-release
        passed:
        - candidate-release
        resource: bosh-candidate-release-tarballs
        trigger: true
      - get: cpi-release
      - get: stemcell
        resource: vsphere-esxi-ubuntu-trusty
      - get: bosh-cli
      - get: bats
      - get: bosh-deployment
      - get: bosh-src
        passed:
        - candidate-release
    - params:
        acquire: true
      put: environment
    - do:
      - file: bosh-src/ci/bats/tasks/deploy-director.yml
        params:
          BAT_INFRASTRUCTURE: vsphere
          BOSH_CLIENT: ((stemcell-test-director-username))
          BOSH_CLIENT_SECRET: ((stemcell-test-director-password))
          BOSH_VSPHERE_VCENTER: ((vcenter-ip))
          BOSH_VSPHERE_VCENTER_CLUSTER: ((vcenter-cluster))
          BOSH_VSPHERE_VCENTER_DATASTORE: ((vcenter-datastore))
          BOSH_VSPHERE_VCENTER_DC: ((vcenter-dc))
          BOSH_VSPHERE_VCENTER_DISK_PATH: ((vcenter-disk-path))
          BOSH_VSPHERE_VCENTER_PASSWORD: ((vcenter-password))
          BOSH_VSPHERE_VCENTER_RP: ((vcenter-rp))
          BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: ((vcenter-template-folder))
          BOSH_VSPHERE_VCENTER_USER: ((vcenter-user))
          BOSH_VSPHERE_VCENTER_VLAN: ((vcenter-vlan))
          BOSH_VSPHERE_VCENTER_VM_FOLDER: ((vcenter-vm-folder))
          BOSH_VSPHERE_VERSION: ((vsphere-version))
          DEPLOY_ARGS: |
            -o bosh-deployment/experimental/postgres-9-4.yml
            -o bosh-deployment/vsphere/resource-pool.yml
        tags:
        - vsphere-v6.5
        task: deploy-director
      - file: bosh-src/ci/bats/iaas/vsphere/prepare-bats-config.yml
        params:
          STEMCELL_NAME: bosh-vsphere-esxi-ubuntu-trusty-go_agent
        tags:
        - vsphere-v6.5
        task: prepare-bats
      - file: bats/ci/tasks/run-bats.yml
        tags:
        - vsphere-v6.5
        task: run-bats
      ensure:
        do:
        - file: bosh-src/ci/bats/tasks/destroy-director.yml
          tags:
          - vsphere-v6.5
          task: teardown
    ensure:
      do:
      - params:
          release: environment
        put: environment
  serial: true
- name: bats-ubuntu-xenial
  plan:
  - do:
    - aggregate:
      - get: bosh-release
        passed:
        - candidate-release
        resource: bosh-candidate-release-tarballs
        trigger: true
      - get: cpi-release
      - get: stemcell
        resource: vsphere-esxi-ubuntu-xenial
      - get: bosh-cli
      - get: bats
      - get: bosh-deployment
      - get: bosh-src
        passed:
        - candidate-release
    - params:
        acquire: true
      put: environment
    - do:
      - file: bosh-src/ci/bats/tasks/deploy-director.yml
        params:
          BAT_INFRASTRUCTURE: vsphere
          BOSH_CLIENT: ((stemcell-test-director-username))
          BOSH_CLIENT_SECRET: ((stemcell-test-director-password))
          BOSH_VSPHERE_VCENTER: ((vcenter-ip))
          BOSH_VSPHERE_VCENTER_CLUSTER: ((vcenter-cluster))
          BOSH_VSPHERE_VCENTER_DATASTORE: ((vcenter-datastore))
          BOSH_VSPHERE_VCENTER_DC: ((vcenter-dc))
          BOSH_VSPHERE_VCENTER_DISK_PATH: ((vcenter-disk-path))
          BOSH_VSPHERE_VCENTER_PASSWORD: ((vcenter-password))
          BOSH_VSPHERE_VCENTER_RP: ((vcenter-rp))
          BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: ((vcenter-template-folder))
          BOSH_VSPHERE_VCENTER_USER: ((vcenter-user))
          BOSH_VSPHERE_VCENTER_VLAN: ((vcenter-vlan))
          BOSH_VSPHERE_VCENTER_VM_FOLDER: ((vcenter-vm-folder))
          BOSH_VSPHERE_VERSION: ((vsphere-version))
          DEPLOY_ARGS: |
            -o bosh-deployment/experimental/postgres-9-4.yml
            -o bosh-deployment/vsphere/resource-pool.yml
        tags:
        - vsphere-v6.5
        task: deploy-director
      - file: bosh-src/ci/bats/iaas/vsphere/prepare-bats-config.yml
        params:
          STEMCELL_NAME: bosh-vsphere-esxi-ubuntu-xenial-go_agent
        tags:
        - vsphere-v6.5
        task: prepare-bats
      - file: bats/ci/tasks/run-bats.yml
        tags:
        - vsphere-v6.5
        task: run-bats
      ensure:
        do:
        - file: bosh-src/ci/bats/tasks/destroy-director.yml
          tags:
          - vsphere-v6.5
          task: teardown
    ensure:
      do:
      - params:
          release: environment
        put: environment
  serial: true
- name: bats-ubuntu-trusty-aws
  plan:
  - do:
    - aggregate:
      - get: stemcell
        resource: aws-xen-hvm-ubuntu-trusty
        trigger: true
      - get: bosh-release
        passed:
        - candidate-release
        resource: bosh-candidate-release-tarballs
        trigger: true
      - get: bats
      - get: bosh-cli
      - get: bosh-src
        passed:
        - candidate-release
      - get: bosh-deployment
    - params:
        delete_on_failure: true
        env_name: bats-ubuntu-trusty-aws-((branch_name))
        terraform_source: bosh-src/ci/bats/iaas/aws/terraform
      put: terraform
    - do:
      - file: bosh-src/ci/bats/tasks/deploy-director.yml
        input_mapping:
          environment: terraform
        params:
          AWS_ACCESS_KEY_ID: ((aws_access_key__primary))
          AWS_DEFAULT_REGION: ((aws_region__primary))
          AWS_SECRET_ACCESS_KEY: ((aws_secret_key__primary))
          AWS_SSH_PRIVATE_KEY: ((aws_ssh_private_key))
          BAT_INFRASTRUCTURE: aws
          DEPLOY_ARGS: |
            -o bosh-deployment/experimental/postgres-9-4.yml
            -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        task: deploy-director
      - file: bosh-src/ci/bats/iaas/aws/prepare-bats-config.yml
        input_mapping:
          environment: terraform
        params:
          STEMCELL_NAME: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
        task: prepare-bats-config
      - file: bats/ci/tasks/run-bats.yml
        task: run-bats
      ensure:
        do:
        - file: bosh-src/ci/bats/tasks/destroy-director.yml
          task: teardown
        ensure:
          do:
          - file: bosh-src/ci/bats/iaas/aws/ensure-terminated.yml
            input_mapping:
              environment: terraform
            params:
              AWS_ACCESS_KEY_ID: ((aws_access_key__primary))
              AWS_DEFAULT_REGION: ((aws_region__primary))
              AWS_SECRET_ACCESS_KEY: ((aws_secret_key__primary))
            task: ensure-terminated
          - get_params:
              action: destroy
            params:
              action: destroy
              env_name: bats-ubuntu-trusty-aws-((branch_name))
              terraform_source: bosh-src/ci/bats/iaas/aws/terraform
            put: terraform
  serial: true
- name: brats-ubuntu-trusty
  plan:
  - aggregate:
    - get: bosh-src
      passed:
      - candidate-release
    - get: bosh-dns-release
    - get: stemcell
      resource: warden-ubuntu-trusty
    - get: bosh-release
      passed:
      - candidate-release
      resource: bosh-candidate-release-tarballs
      trigger: true
  - do:
    - attempts: 2
      params:
        env:
          GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
        env_name: brats-ubuntu-trusty-((branch_name))
        terraform_source: bosh-src/ci/brats
        vars:
          aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
          aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
          gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
          gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
          gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
          gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
          gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
          gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
          rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
          rds_mysql_password: ((brats-rds-mysql-external-db-password))
          rds_mysql_username: ((brats-rds-mysql-external-db-user))
          rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
          rds_postgres_password: ((brats-rds-postgres-external-db-password))
          rds_postgres_username: ((brats-rds-postgres-external-db-user))
      put: brats-terraform
    - attempts: 2
      file: bosh-src/ci/tasks/create-brats-ssl-certificates.yml
      input_mapping:
        terraform-output: brats-terraform
      params:
        GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
      task: create-ssl-certificates
    - file: bosh-src/ci/tasks/test-brats.yml
      input_mapping:
        database-metadata: brats-terraform
      params:
        GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
        GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
        GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
        GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
        GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
        GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
        RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
        RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
        RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
        RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
        RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
        RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
        STEMCELL_OS: ubuntu-trusty
      privileged: true
      tags:
      - worker-brats
      task: test-brats
    ensure:
      do:
      - file: bosh-src/ci/tasks/test-brats-db-cleanup.yml
        input_mapping:
          database-metadata: brats-terraform
        params:
          GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
          GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
          GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
          GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
          GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
          GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
          RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
          RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
          RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
          RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
          RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
          RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
          STEMCELL_OS: ubuntu-trusty
        task: cleanup-external-dbs
      - get_params:
          action: destroy
        params:
          action: destroy
          env:
            GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
          env_name: brats-ubuntu-trusty-((branch_name))
          terraform_source: bosh-src/ci/brats
          vars:
            aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
            aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
            gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
            gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
            gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
            gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
            gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
            gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
            rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
            rds_mysql_password: ((brats-rds-mysql-external-db-password))
            rds_mysql_username: ((brats-rds-mysql-external-db-user))
            rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
            rds_postgres_password: ((brats-rds-postgres-external-db-password))
            rds_postgres_username: ((brats-rds-postgres-external-db-user))
        put: brats-terraform
  serial: true
- name: bbr-ubuntu-trusty
  plan:
  - aggregate:
    - get: bosh-src
      passed:
      - candidate-release
    - get: stemcell
      passed:
      - compile-bbr-trusty
      resource: warden-ubuntu-trusty
    - get: bosh-release
      passed:
      - candidate-release
      resource: bosh-candidate-release-tarballs
      trigger: true
    - get: bbr-compiled-release
      passed:
      - compile-bbr-trusty
      resource: bbr-compiled-trusty
  - do:
    - attempts: 2
      params:
        env:
          GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
        env_name: bbr-ubuntu-trusty-((branch_name))
        terraform_source: bosh-src/ci/brats
        vars:
          aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
          aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
          gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
          gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
          gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
          gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
          gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
          gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
          rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
          rds_mysql_password: ((brats-rds-mysql-external-db-password))
          rds_mysql_username: ((brats-rds-mysql-external-db-user))
          rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
          rds_postgres_password: ((brats-rds-postgres-external-db-password))
          rds_postgres_username: ((brats-rds-postgres-external-db-user))
      put: brats-terraform
    - attempts: 2
      file: bosh-src/ci/tasks/create-brats-ssl-certificates.yml
      input_mapping:
        terraform-output: brats-terraform
      params:
        GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
      task: create-ssl-certificates
    - file: bosh-src/ci/tasks/test-bbr.yml
      input_mapping:
        database-metadata: brats-terraform
      params:
        GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
        GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
        GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
        GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
        GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
        GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
        RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
        RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
        RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
        RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
        RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
        RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
        STEMCELL_OS: ubuntu-trusty
      privileged: true
      tags:
      - worker-brats
      task: test-bbr
    ensure:
      do:
      - file: bosh-src/ci/tasks/test-brats-db-cleanup.yml
        input_mapping:
          database-metadata: brats-terraform
        params:
          GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
          GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
          GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
          GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
          GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
          GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
          RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
          RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
          RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
          RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
          RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
          RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
          STEMCELL_OS: ubuntu-trusty
        task: cleanup-external-dbs
      - get_params:
          action: destroy
        params:
          action: destroy
          env:
            GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
          env_name: bbr-ubuntu-trusty-((branch_name))
          terraform_source: bosh-src/ci/brats
          vars:
            aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
            aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
            gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
            gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
            gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
            gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
            gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
            gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
            rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
            rds_mysql_password: ((brats-rds-mysql-external-db-password))
            rds_mysql_username: ((brats-rds-mysql-external-db-user))
            rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
            rds_postgres_password: ((brats-rds-postgres-external-db-password))
            rds_postgres_username: ((brats-rds-postgres-external-db-user))
        put: brats-terraform
  serial: true
- name: brats-ubuntu-xenial
  plan:
  - aggregate:
    - get: bosh-src
      passed:
      - candidate-release
    - get: bosh-dns-release
    - get: stemcell
      resource: warden-ubuntu-xenial
    - get: bosh-release
      passed:
      - candidate-release
      resource: bosh-candidate-release-tarballs
      trigger: true
  - do:
    - attempts: 2
      params:
        env:
          GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
        env_name: brats-ubuntu-xenial-((branch_name))
        terraform_source: bosh-src/ci/brats
        vars:
          aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
          aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
          gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
          gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
          gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
          gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
          gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
          gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
          rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
          rds_mysql_password: ((brats-rds-mysql-external-db-password))
          rds_mysql_username: ((brats-rds-mysql-external-db-user))
          rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
          rds_postgres_password: ((brats-rds-postgres-external-db-password))
          rds_postgres_username: ((brats-rds-postgres-external-db-user))
      put: brats-terraform
    - attempts: 2
      file: bosh-src/ci/tasks/create-brats-ssl-certificates.yml
      input_mapping:
        terraform-output: brats-terraform
      params:
        GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
      task: create-ssl-certificates
    - file: bosh-src/ci/tasks/test-brats.yml
      input_mapping:
        database-metadata: brats-terraform
      params:
        GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
        GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
        GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
        GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
        GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
        GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
        RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
        RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
        RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
        RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
        RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
        RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
        STEMCELL_OS: ubuntu-xenial
      privileged: true
      tags:
      - worker-brats
      task: test-brats
    ensure:
      do:
      - file: bosh-src/ci/tasks/test-brats-db-cleanup.yml
        input_mapping:
          database-metadata: brats-terraform
        params:
          GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
          GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
          GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
          GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
          GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
          GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
          RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
          RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
          RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
          RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
          RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
          RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
          STEMCELL_OS: ubuntu-xenial
        task: cleanup-external-dbs
      - get_params:
          action: destroy
        params:
          action: destroy
          env:
            GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
          env_name: brats-ubuntu-xenial-((branch_name))
          terraform_source: bosh-src/ci/brats
          vars:
            aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
            aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
            gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
            gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
            gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
            gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
            gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
            gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
            rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
            rds_mysql_password: ((brats-rds-mysql-external-db-password))
            rds_mysql_username: ((brats-rds-mysql-external-db-user))
            rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
            rds_postgres_password: ((brats-rds-postgres-external-db-password))
            rds_postgres_username: ((brats-rds-postgres-external-db-user))
        put: brats-terraform
  serial: true
- name: bbr-ubuntu-xenial
  plan:
  - aggregate:
    - get: bosh-src
      passed:
      - candidate-release
    - get: stemcell
      passed:
      - compile-bbr-xenial
      resource: warden-ubuntu-xenial
    - get: bosh-release
      passed:
      - candidate-release
      resource: bosh-candidate-release-tarballs
      trigger: true
    - get: bbr-compiled-release
      passed:
      - compile-bbr-xenial
      resource: bbr-compiled-xenial
  - do:
    - attempts: 2
      params:
        env:
          GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
        env_name: bbr-ubuntu-xenial-((branch_name))
        terraform_source: bosh-src/ci/brats
        vars:
          aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
          aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
          gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
          gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
          gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
          gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
          gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
          gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
          rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
          rds_mysql_password: ((brats-rds-mysql-external-db-password))
          rds_mysql_username: ((brats-rds-mysql-external-db-user))
          rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
          rds_postgres_password: ((brats-rds-postgres-external-db-password))
          rds_postgres_username: ((brats-rds-postgres-external-db-user))
      put: brats-terraform
    - attempts: 2
      file: bosh-src/ci/tasks/create-brats-ssl-certificates.yml
      input_mapping:
        terraform-output: brats-terraform
      params:
        GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
      task: create-ssl-certificates
    - file: bosh-src/ci/tasks/test-bbr.yml
      input_mapping:
        database-metadata: brats-terraform
      params:
        GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
        GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
        GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
        GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
        GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
        GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
        RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
        RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
        RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
        RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
        RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
        RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
        STEMCELL_OS: ubuntu-xenial
      privileged: true
      tags:
      - worker-brats
      task: test-bbr
    ensure:
      do:
      - file: bosh-src/ci/tasks/test-brats-db-cleanup.yml
        input_mapping:
          database-metadata: brats-terraform
        params:
          GCP_MYSQL_EXTERNAL_DB_NAME: ((brats-gcp-mysql-external-db-name))
          GCP_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-gcp-mysql-external-db-password))
          GCP_MYSQL_EXTERNAL_DB_USER: ((brats-gcp-mysql-external-db-user))
          GCP_POSTGRES_EXTERNAL_DB_NAME: ((brats-gcp-postgres-external-db-name))
          GCP_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-gcp-postgres-external-db-password))
          GCP_POSTGRES_EXTERNAL_DB_USER: ((brats-gcp-postgres-external-db-user))
          RDS_MYSQL_EXTERNAL_DB_NAME: ((brats-rds-mysql-external-db-name))
          RDS_MYSQL_EXTERNAL_DB_PASSWORD: ((brats-rds-mysql-external-db-password))
          RDS_MYSQL_EXTERNAL_DB_USER: ((brats-rds-mysql-external-db-user))
          RDS_POSTGRES_EXTERNAL_DB_NAME: ((brats-rds-postgres-external-db-name))
          RDS_POSTGRES_EXTERNAL_DB_PASSWORD: ((brats-rds-postgres-external-db-password))
          RDS_POSTGRES_EXTERNAL_DB_USER: ((brats-rds-postgres-external-db-user))
          STEMCELL_OS: ubuntu-xenial
        task: cleanup-external-dbs
      - get_params:
          action: destroy
        params:
          action: destroy
          env:
            GOOGLE_CREDENTIALS: ((bosh-ci-database-terraform-google-credentials))
          env_name: bbr-ubuntu-xenial-((branch_name))
          terraform_source: bosh-src/ci/brats
          vars:
            aws_access_key_id: ((bosh-ci-database-terraform-rds-aws-access-key-id))
            aws_secret_access_key: ((bosh-ci-database-terraform-rds-aws-secret-access-key))
            gcp_mysql_databasename: ((brats-gcp-mysql-external-db-name))
            gcp_mysql_password: ((brats-gcp-mysql-external-db-password))
            gcp_mysql_username: ((brats-gcp-mysql-external-db-user))
            gcp_postgres_databasename: ((brats-gcp-postgres-external-db-name))
            gcp_postgres_password: ((brats-gcp-postgres-external-db-password))
            gcp_postgres_username: ((brats-gcp-postgres-external-db-user))
            rds_mysql_databasename: ((brats-rds-mysql-external-db-name))
            rds_mysql_password: ((brats-rds-mysql-external-db-password))
            rds_mysql_username: ((brats-rds-mysql-external-db-user))
            rds_postgres_databasename: ((brats-rds-postgres-external-db-name))
            rds_postgres_password: ((brats-rds-postgres-external-db-password))
            rds_postgres_username: ((brats-rds-postgres-external-db-user))
        put: brats-terraform
  serial: true
- name: delivery
  plan:
  - aggregate:
    - get: bosh-src
      passed:
      - bats-ubuntu-trusty
      - bats-ubuntu-xenial
      - bats-centos
      - brats-ubuntu-trusty
      - brats-ubuntu-xenial
      - bbr-ubuntu-trusty
      - bbr-ubuntu-xenial
      trigger: true
      version: every
  - params:
      repos:
      - bosh-src
    put: tracker-output
- name: finalize-bosh-release
  plan:
  - aggregate:
    - get: bosh-src
      passed:
      - bats-centos
      - bats-ubuntu-trusty
      - bats-ubuntu-xenial
      - delivery
    - get: bosh-master
    - get: bosh-dev-release
      passed:
      - bats-centos
      - bats-ubuntu-trusty
      - bats-ubuntu-xenial
      resource: bosh-candidate-release-tarballs
    - get: bosh-cli
    - get: candidate-version
      params:
        bump: minor
  - file: bosh-src/ci/tasks/finalize-bosh-release.yml
    params:
      RELEASE_PRIVATE_YML: ((bosh_release_private_yml))
    task: promote-release
  - params:
      file: bumped-candidate-version/version
    put: candidate-version
  - params:
      repository: bosh-master-with-final
      rebase: true
    put: bosh-master
  - params:
      repository: bosh-src-with-bumped-version
      annotate: bosh-src-with-bumped-version-tag/annotate-msg
      tag: bosh-src-with-bumped-version-tag/tag-name
      rebase: true
    put: bosh-src
  serial: true
- name: export-final-release
  serial: true
  plan:
  - aggregate:
    - get: bosh-master
    - get: candidate-version
      passed: [finalize-bosh-release]
      trigger: true
    - get: warden-ubuntu-xenial
      trigger: true
  - task: export-final-release
    file: bosh-master/ci/tasks/export-final-release.yml
    privileged: true
    input_mapping:
      version: candidate-version
      stemcell: warden-ubuntu-xenial
      bosh-src: bosh-master
  - task: push-bosh-compiled-releases
    file: bosh-master/ci/tasks/push-bosh-compiled-release.yml
    params:
      AWS_ACCESS_KEY_ID: ((bosh-compiled-releases-aws-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((bosh-compiled-releases-aws-secret-access-key))
      git_private_key: ((bosh-compiled-releases-index-deploy-key))
    input_mapping:
      bosh-src: bosh-master
resource_types:
- name: terraform
  source:
    repository: ljfranklin/terraform-resource
  type: docker-image
- name: gcs-resource
  source:
    repository: frodenas/gcs-resource
  type: docker-image
resources:
- name: bosh-src
  source:
    branch: 267.x
    private_key: ((github_deployment_key))
    uri: ((bosh_src_url))
  type: git
- name: candidate-version
  source:
    access_key_id: ((candidate_release_access_key_id))
    bucket: ((candidate_release_bucket))
    initial_version: 267.0.0
    key: 267.x/version
    secret_access_key: ((candidate_release_secret_access_key))
  type: semver
- name: bosh-candidate-release-tarballs
  source:
    access_key_id: ((candidate_release_access_key_id))
    bucket: ((candidate_release_bucket))
    secret_access_key: ((candidate_release_secret_access_key))
    versioned_file: 267.x/bosh-dev-release.tgz
  type: s3
- name: bbr-sdk-release
  source:
    repository: cloudfoundry-incubator/backup-and-restore-sdk-release
  type: bosh-io-release
- name: bbr-compiled-trusty
  source:
    access_key_id: ((candidate_release_access_key_id))
    bucket: ((bbr_compiled_release_bucket))
    regexp: trusty/backup-and-restore-sdk-(.*).tgz
    secret_access_key: ((candidate_release_secret_access_key))
  type: s3
- name: bbr-compiled-xenial
  source:
    access_key_id: ((candidate_release_access_key_id))
    bucket: ((bbr_compiled_release_bucket))
    regexp: xenial/backup-and-restore-sdk-(.*).tgz
    secret_access_key: ((candidate_release_secret_access_key))
  type: s3
- name: integration-tests-parallel-runtime
  source:
    access_key_id: ((integration_runtime_access_key_id))
    bucket: ((integration_runtime_bucket))
    secret_access_key: ((integration_runtime_secret_access_key))
    versioned_file: parallel_runtime_rspec.log
  type: s3
- name: brats-terraform
  source:
    storage:
      access_key_id: ((bosh-ci-database-terraform-aws-access-key-id))
      bucket: bosh-ci-terraform
      bucket_path: brats-ci/
      region_name: us-west-1
      secret_access_key: ((bosh-ci-database-terraform-aws-secret-access-key))
  type: terraform
- name: davcli
  source:
    bucket: davcli
    regexp: davcli-(.*)-linux-amd64
    region_name: us-east-1
  type: s3
- name: bosh-fuzz-tests
  source:
    branch: master
    uri: https://github.com/cloudfoundry-incubator/bosh-fuzz-tests.git
  type: git
- name: fuzz-interval-trigger
  source:
    interval: 1h
  type: time
- name: bosh-cli
  source:
    bucket: ((bosh_cli_aws_s3_alpha_release_bucket))
    regexp: alpha-bosh-cli-(.*)-linux-amd64
    region_name: ((bosh_cli_aws_s3_release_bucket_region))
  type: s3
- name: bosh-dns-release
  source:
    repository: cloudfoundry/bosh-dns-release
  type: bosh-io-release
- name: bats
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
  type: git
- name: bosh-deployment
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment
  type: git
- name: environment
  source:
    branch: master
    pool: vsphere
    private_key: ((github_deployment_key__bosh-cpi-environments))
    uri: git@github.com:pivotal-cf-experimental/bats-concourse-pool.git
  type: pool
- name: vsphere-esxi-ubuntu-trusty
  source:
    name: bosh-vsphere-esxi-ubuntu-trusty-go_agent
  type: bosh-io-stemcell
- name: vsphere-esxi-ubuntu-xenial
  source:
    name: bosh-vsphere-esxi-ubuntu-xenial-go_agent
    version_family: 97.latest
  type: bosh-io-stemcell
- name: aws-xen-hvm-ubuntu-trusty
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
  type: bosh-io-stemcell
- name: warden-ubuntu-trusty
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  type: bosh-io-stemcell
- name: warden-ubuntu-xenial
  source:
    name: bosh-warden-boshlite-ubuntu-xenial-go_agent
    version_family: 97.latest
  type: bosh-io-stemcell
- name: vsphere-esxi-centos-7
  source:
    name: bosh-vsphere-esxi-centos-7-go_agent
  type: bosh-io-stemcell
- name: cpi-release
  source:
    repository: cloudfoundry-incubator/bosh-vsphere-cpi-release
  type: bosh-io-release
- name: bosh-agent
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-agent
  type: git
- name: tracker-output
  source:
    project_id: ((tracker_project_id))
    token: ((tracker_api_token))
    tracker_url: https://www.pivotaltracker.com
  type: tracker
- name: bosh-main-mysql-5.5
  source:
    repository: bosh/main-mysql-5.5
  type: docker-image
- name: bosh-main-mysql-5.6
  source:
    repository: bosh/main-mysql-5.6
  type: docker-image
- name: bosh-main-mysql-5.7
  source:
    repository: bosh/main-mysql-5.7
  type: docker-image
- name: bosh-main-postgres-9.4
  source:
    repository: bosh/main-postgres-9.4
  type: docker-image
- name: bosh-main-postgres-9.6
  source:
    repository: bosh/main-postgres-9.6
  type: docker-image
- name: terraform
  source:
    storage:
      access_key_id: ((aws_access_key__primary))
      bucket: ((terraform_bucket))
      bucket_path: terraform-state
      secret_access_key: ((aws_secret_key__primary))
    vars:
      access_key: ((aws_access_key__primary))
      region: ((aws_region__primary))
      secret_key: ((aws_secret_key__primary))
      ssh_public_key: ((aws_ssh_public_key))
  type: terraform
- name: bosh-master
  source:
    branch: master
    private_key: ((github_deployment_key))
    uri: ((bosh_src_url))
  type: git
shared:
- config:
    image_resource:
      source:
        repository: bosh/main
      type: docker-image
    inputs:
    - name: bosh-src
      path: uninstalled-bosh-src
    - name: bosh-cli
    - name: bosh-agent
    outputs:
    - name: bosh-src
    params:
      RUBY_VERSION: 2.4.4
    platform: linux
    run:
      args:
      - -cex
      - |
        mv ./bosh-cli/*bosh-cli-*-linux-amd64 /usr/local/bin/bosh
        chmod +x /usr/local/bin/bosh
        source uninstalled-bosh-src/ci/tasks/utils.sh
        agent_path=uninstalled-bosh-src/src/go/src/github.com/cloudfoundry/
        mkdir -p $agent_path
        cp -r bosh-agent $agent_path
        pushd uninstalled-bosh-src/src
          source /etc/profile.d/chruby.sh
          chruby $RUBY_VERSION

          bundle install --local
          bundle exec rake spec:integration:install_dependencies
        popd
        rsync -a uninstalled-bosh-src/ bosh-src/
      path: /bin/bash
  task: install-dependencies
- file: bosh-src/ci/bats/tasks/deploy-director.yml
  params:
    BAT_INFRASTRUCTURE: vsphere
    BOSH_CLIENT: ((stemcell-test-director-username))
    BOSH_CLIENT_SECRET: ((stemcell-test-director-password))
    BOSH_VSPHERE_VCENTER: ((vcenter-ip))
    BOSH_VSPHERE_VCENTER_CLUSTER: ((vcenter-cluster))
    BOSH_VSPHERE_VCENTER_DATASTORE: ((vcenter-datastore))
    BOSH_VSPHERE_VCENTER_DC: ((vcenter-dc))
    BOSH_VSPHERE_VCENTER_DISK_PATH: ((vcenter-disk-path))
    BOSH_VSPHERE_VCENTER_PASSWORD: ((vcenter-password))
    BOSH_VSPHERE_VCENTER_RP: ((vcenter-rp))
    BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: ((vcenter-template-folder))
    BOSH_VSPHERE_VCENTER_USER: ((vcenter-user))
    BOSH_VSPHERE_VCENTER_VLAN: ((vcenter-vlan))
    BOSH_VSPHERE_VCENTER_VM_FOLDER: ((vcenter-vm-folder))
    BOSH_VSPHERE_VERSION: ((vsphere-version))
    DEPLOY_ARGS: |
      -o bosh-deployment/experimental/postgres-9-4.yml
      -o bosh-deployment/vsphere/resource-pool.yml
  tags:
  - vsphere-v6.5
  task: deploy-director
- file: bosh-src/ci/bats/iaas/vsphere/prepare-bats-config.yml
  tags:
  - vsphere-v6.5
  task: prepare-bats
- file: bats/ci/tasks/run-bats.yml
  tags:
  - vsphere-v6.5
  task: run-bats
- file: bosh-src/ci/bats/tasks/destroy-director.yml
  tags:
  - vsphere-v6.5
  task: teardown
