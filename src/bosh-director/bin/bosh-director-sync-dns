#!/usr/bin/env ruby

require 'erb'
require 'optparse'
require 'bosh/director/config'
require 'bosh/director/sync_dns_scheduler'
require 'bosh/director/agent_broadcaster'
require 'bosh/director/dns/dns_version_converger'

config_file = nil

opts = OptionParser.new do |op|
  op.on('-c', '--config [ARG]', 'Configuration File') do |opt|
    config_file = opt
  end
end

opts.parse!(ARGV.dup)

config_file ||= ::File.expand_path('../../config/bosh-director.yml', __FILE__)
config = Bosh::Director::Config.load_file(config_file)
config.db

dns_converger = Bosh::Director::DnsVersionConverger.new(
  Bosh::Director::AgentBroadcaster.new,
  Bosh::Director::Config.logger,
  Bosh::Director::Config.max_threads
)
dns_sync_broadcaster = Bosh::Director::SyncDnsScheduler.new(config, dns_converger, 10)
dns_sync_broadcaster.prep

%w(TERM INT QUIT).each do |signal|
  trap(signal) do
    dns_sync_broadcaster.stop!
    EM.stop
  end
end

EventMachine.run do
  EM.defer do
    Thread.new { dns_sync_broadcaster.start! }
  end
end
